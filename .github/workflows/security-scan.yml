name: "üõ°Ô∏è Security Scanning"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Monday at midnight
    - cron: '0 0 * * 1'

permissions:
  # Required for all workflows
  security-events: write
  # Only needed for workflows in private repositories
  actions: read
  contents: read

jobs:
  # CodeQL Analysis for multiple languages
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'python']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  # Dependency Review on PRs
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: critical

  # Secret Scanning Alerts
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Scan for Secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Shell script security analysis
  shell-check:
    name: ShellCheck
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install ShellCheck
        run: sudo apt-get install -y shellcheck
        
      - name: Run ShellCheck on Scripts
        run: |
          find . -name "*.sh" -o -name "*.bash" -type f | xargs shellcheck --severity=warning

  # PowerShell script security analysis
  powershell-analysis:
    name: PowerShell Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@v1.1
        with:
          path: .
          recurse: true
          output: results.sarif
        
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  # Generate and publish SBOM
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Generate SBOM with CycloneDX
        uses: CycloneDX/gh-node-module-generatebom@master
        with:
          path: .
          output: sbom.xml
          
      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v3
        with:
          name: SBOM
          path: sbom.xml 